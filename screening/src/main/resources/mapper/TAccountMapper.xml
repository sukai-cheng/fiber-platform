<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ht.screening.mapper.TAccountMapper">
  <resultMap id="BaseResultMap" type="com.ht.screening.entity.TAccount">
    <!--@mbg.generated-->
    <!--@Table t_Account-->
    <id column="fId" jdbcType="INTEGER" property="fid" />
    <result column="fAccount" jdbcType="VARCHAR" property="fAccount" />
    <result column="fName" jdbcType="VARCHAR" property="fName" />
    <result column="fPassword" jdbcType="VARCHAR" property="fPassword" />
    <result column="fIsAdmin" jdbcType="BIT" property="fIsAdmin" />
    <result column="State" jdbcType="INTEGER" property="state" />
    <result column="fSection" jdbcType="INTEGER" property="fSection" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    fId, fAccount, fName, fPassword, fIsAdmin, [State], fSection
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_Account
    where fId = #{fid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from t_Account
    where fId = #{fid,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKeySelective" parameterType="com.ht.screening.entity.TAccount">
    <!--@mbg.generated-->
    update t_Account
    <set>
      <if test="fAccount != null">
        fAccount = #{fAccount,jdbcType=VARCHAR},
      </if>
      <if test="fName != null">
        fName = #{fName,jdbcType=VARCHAR},
      </if>
      <if test="fPassword != null">
        fPassword = #{fPassword,jdbcType=VARCHAR},
      </if>
      <if test="fIsAdmin != null">
        fIsAdmin = #{fIsAdmin,jdbcType=BIT},
      </if>
      <if test="state != null">
        [State] = #{state,jdbcType=INTEGER},
      </if>
      <if test="fSection != null">
        fSection = #{fSection,jdbcType=INTEGER},
      </if>
    </set>
    where fId = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ht.screening.entity.TAccount">
    <!--@mbg.generated-->
    update t_Account
    set fAccount = #{fAccount,jdbcType=VARCHAR},
      fName = #{fName,jdbcType=VARCHAR},
      fPassword = #{fPassword,jdbcType=VARCHAR},
      fIsAdmin = #{fIsAdmin,jdbcType=BIT},
      [State] = #{state,jdbcType=INTEGER},
      fSection = #{fSection,jdbcType=INTEGER}
    where fId = #{fid,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_Account
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="fAccount = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when fId = #{item.fid,jdbcType=INTEGER} then #{item.fAccount,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="fName = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when fId = #{item.fid,jdbcType=INTEGER} then #{item.fName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="fPassword = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when fId = #{item.fid,jdbcType=INTEGER} then #{item.fPassword,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="fIsAdmin = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when fId = #{item.fid,jdbcType=INTEGER} then #{item.fIsAdmin,jdbcType=BIT}
        </foreach>
      </trim>
      <trim prefix="[State] = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when fId = #{item.fid,jdbcType=INTEGER} then #{item.state,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="fSection = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when fId = #{item.fid,jdbcType=INTEGER} then #{item.fSection,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where fId in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.fid,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="fId" keyProperty="fid" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_Account
    (fAccount, fName, fPassword, fIsAdmin, [State], fSection)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.fAccount,jdbcType=VARCHAR}, #{item.fName,jdbcType=VARCHAR}, #{item.fPassword,jdbcType=VARCHAR},
        #{item.fIsAdmin,jdbcType=BIT}, #{item.state,jdbcType=INTEGER}, #{item.fSection,jdbcType=INTEGER}
        )
    </foreach>
  </insert>

  <select id="findByUserNameAndPassWord" resultType="Integer">
      select
      <include refid="Base_Column_List"/>
      from t_Account
      where fAccount = #{userName,jdbcType=VARCHAR}
        and fPassword = #{password,jdbcType=VARCHAR}
        and State = '1'
  </select>

  <select id="getUserInfo" resultType="com.ht.screening.dto.EmployeeDto">
      select tac.fAccount, tac.fName, (select top 1 ClassGroup from t_GroupInfo order by BeginTime desc)
      from t_Account tac
               left join ht_eln_psnaccount hep on tac.fAccount = hep.员工工号
               left join t_AccountRole tar on tac.fId = tar.fAccountId
               left join t_Role tr on tar.fRoleId = tr.fId
      where tr.fId = 90 and tac.fAccount = #{userName,jdbcType=VARCHAR} and tac.fPassword = #{password,jdbcType=VARCHAR};
  </select>
</mapper>